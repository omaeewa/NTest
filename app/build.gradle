plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.protobuf.plugin)
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.miracle.natifetest"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.8"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.miracle.natifetest'
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.compose.ui
    implementation libs.compose.material3
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.compiler
    implementation libs.compose.runtime
    implementation libs.compose.ui.tooling
    implementation libs.navigation.compose
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.activity.compose
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.espresso.core
    androidTestImplementation libs.compose.ui.test.junit
    debugImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.ui.test.manifest

    // Moshi
    implementation libs.moshi.kotlin

    // Retrofit with Moshi Converter
    implementation libs.retrofit.moshi.converter

    // Hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.hilt.navigation.compose

    // Glide
    implementation libs.glide.compose

    // Accompanist
    implementation libs.accompanist.pager

    implementation libs.material

    implementation libs.datastore
    implementation libs.protobuf.javalite
}

protobuf {
    protoc {
        artifact = libs.protobuf.protoc.get().toString()
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}
